//-
	-----------------------------------------------------------------------------
	Copyright (c) 2014-2017 Seth Anderson

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
	-----------------------------------------------------------------------------

h1 Registration Form
hr
p
	em Upon registration, an email with a verification link will be sent to the provided address. Certain site features may be unavailable to you until your address is verified.
form(name = "registrationForm", novalidate, ng-controller = "RegistrationController as regCtrl", ng-submit = "regCtrl.register()")
	.row
		.form-group.col-xs-6
			label Email 
				span.text-danger (Required)
			input.form-control(type = "email", name = "email", autofocus, ng-model = "regCtrl.email", required)
			.form-feedback.text-danger(ng-messages = "registrationForm.email.$error", ng-if = "registrationForm.email.$dirty", role = "alert")
				div(ng-message = "required") An email is required
				div(ng-message = "email") Invalid email
	.row
		.form-group.col-xs-6
			label Password 
				span.text-danger (Required) 
				.glyphicon.glyphicon-question-sign(uib-tooltip-html = "regCtrl.help.password", tooltip-placement = "bottom")
			input.form-control(type = "password", name = "password", ng-model = "regCtrl.pass", required, pattern = "(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,255}")
			.form-feedback.text-danger(ng-messages = "registrationForm.password.$error", ng-if = "registrationForm.password.$dirty", role = "alert")
				div(ng-message = "required") A password is required
				div(ng-message = "pattern") Invalid password: your password must consist of at least 8 characters including a lowercase letter, an uppercase letter, and a number
	.row
		.form-group.col-xs-6
			label Confirm Password
			input.form-control(type = "password", name = "confirmPassword", ng-model = "regCtrl.confirmPass", compare-to = "regCtrl.pass")
			.form-feedback.text-danger(ng-messages = "registrationForm.confirmPassword.$error", ng-if = "registrationForm.confirmPassword.$dirty", role = "alert")
				div(ng-message = "compareTo") Passwords must match
	hr
	.row
		.form-group.col-xs-4
			label First Name 
				span.text-danger (Required)
			input.form-control(type = "text", name = "firstName", ng-model = "regCtrl.firstName", required)
			.form-feedback.text-danger(ng-messages = "registrationForm.firstName.$error", ng-if = "registrationForm.firstName.$dirty", role = "alert")
				div(ng-message = "required") A first name is required
		.form-group.col-xs-4
			label Last Name 
				span.text-danger (Required)
			input.form-control(type = "text", name = "lastName", ng-model = "regCtrl.lastName", required)
			.form-feedback.text-danger(ng-messages = "registrationForm.lastName.$error", ng-if = "registrationForm.lastName.$dirty", role = "alert")
				div(ng-message = "required") A last name is required
	.row
		.form-group.col-xs-6
			label Handles
			input.form-control(type = "text", name = "primaryHandle", ng-model = "regCtrl.primaryHandle", placeholder = "Primary Handle")
	.row
		.form-group.col-xs-6
			simple-array-entry(array-model = "regCtrl.tertiaryHandles", addition-tooltip = "Add another handle", removal-tooltip = "Remove this handle")
	.g-recaptcha(data-sitekey = recaptchaSiteKey)
	hr
	input.btn.btn-default(type = "submit", value = "Register", ng-disabled = "registrationForm.$invalid || regCtrl.busy")
script(src = "https://www.google.com/recaptcha/api.js", type = "text/javascript-lazy", async, defer)
