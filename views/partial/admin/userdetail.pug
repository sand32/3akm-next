//-
	-----------------------------------------------------------------------------
	Copyright (c) 2014-2017 Seth Anderson

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
	-----------------------------------------------------------------------------

.panel(ng-controller = "UserDetailController as user")
	.panel-body
		form(name = "userForm", novalidate, ng-submit = "user.save()")
			.row
				.form-group.col-xs-6
					label Email 
						span.text-danger (Required)
					input.form-control(type = "email", name = "email", autofocus, ng-model = "user.current.email", required)
					.form-feedback.text-danger(ng-messages = "userForm.email.$error", ng-if = "userForm.email.$dirty", role = "alert")
						div(ng-message = "required") An email is required
						div(ng-message = "email") Invalid email
				.form-group.col-xs-6(ng-if = "user.loaded && !user.current._id")
					label Autoverify Email
					enum-select(current = "user.current.verified", possibles = "user.boolPossibles")
				.field-align.col-xs-6(ng-if = "user.current._id && !user.current.verified")
					span.text-danger.form-control-static.col-xs-6 Email not verified!
					.btn-group.col-xs-6
						a.btn.btn-danger(ng-click = "user.resendVerificationEmail()", ng-disabled = "user.busy") Resend
						a.btn.btn-danger(ng-click = "user.verifyEmail()", ng-disabled = "user.busy") Verify
				.field-align.col-xs-6(ng-if = "user.current.verified")
					span.text-success.form-control-static.col-xs-6 Been verified!
			.row(ng-if = "user.loaded && !user.current._id")
				.form-group.col-xs-6
					label Password 
						span.text-danger (Required)
					input.form-control(type = "password", name = "password", ng-model = "user.current.password", required, pattern = "(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,255}")
					.form-feedback.text-danger(ng-messages = "userForm.password.$error", ng-if = "userForm.password.$dirty", role = "alert")
						div(ng-message = "required") An password is required
						div(ng-message = "pattern") Invalid password: the password must consist of at least 8 characters including a lowercase letter, an uppercase letter, and a number
				.form-group.col-xs-6
					label Confirm Password
					input.form-control(type = "password", name = "confirmPassword", ng-model = "user.confirmPassword", compare-to = "user.current.password")
					.form-feedback.text-danger(ng-messages = "userForm.confirmPassword.$error", ng-if = "userForm.confirmPassword.$dirty", role = "alert")
						div(ng-message = "compareTo") Passwords must match
			.row
				.well.col-xs-6
					.row
						label.col-xs-5 Created:
						.col-xs-7(ng-if = "user.current.created") {{user.current.created | date: "medium"}}
						.col-xs-7(ng-if = "!user.current.created") N/A
					.row
						label.col-xs-5 Modified:
						.col-xs-7(ng-if = "user.current.modified") {{user.current.modified | date: "medium"}}
						.col-xs-7(ng-if = "!user.current.modified") N/A
					.row
						label.col-xs-5 Last Online:
						.col-xs-7(ng-if = "user.current.accessed") {{user.current.accessed | date: "medium"}}
						.col-xs-7(ng-if = "!user.current.accessed") N/A
			.row
				.form-group.col-xs-6
					label First Name 
						span.text-danger (Required)
					input.form-control(type = "text", name = "firstName", ng-model = "user.current.firstName", required)
					.form-feedback.text-danger(ng-messages = "userForm.firstName.$error", ng-if = "userForm.firstName.$dirty", role = "alert")
						div(ng-message = "required") A first name is required
				.form-group.col-xs-6
					label Last Name 
						span.text-danger (Required)
					input.form-control(type = "text", name = "lastName", ng-model = "user.current.lastName", required)
					.form-feedback.text-danger(ng-messages = "userForm.lastName.$error", ng-if = "userForm.lastName.$dirty", role = "alert")
						div(ng-message = "required") A last name is required
			.row
				.form-group.col-xs-6
					label Handles
					input.form-control(type = "text", name = "primaryHandle", ng-model = "user.current.primaryHandle", placeholder = "Primary Handle")
			.row
				.form-group.col-xs-6
					simple-array-entry(array-model = "user.current.tertiaryHandles", addition-tooltip = "Add another handle", removal-tooltip = "Remove this handle")
			.row
				.form-group.col-xs-4
					label LAN Invite Desired 
						.glyphicon.glyphicon-question-sign(tooltip = "{{user.help.lanInviteDesired}}", tooltip-placement = "bottom")
					enum-select(current = "user.current.lanInviteDesired", possibles = "user.boolPossibles")
				.form-group.col-xs-4
					label Blacklisted 
						.glyphicon.glyphicon-question-sign(tooltip = "{{user.help.blacklisted}}", tooltip-placement = "bottom")
					enum-select(current = "user.current.blacklisted", possibles = "user.boolPossibles")
				.form-group.col-xs-4
					label VIP 
						.glyphicon.glyphicon-question-sign(tooltip = "{{user.help.vip}}", tooltip-placement = "bottom")
					enum-select(current = "user.current.vip", possibles = "user.boolPossibles")
			.row
				.form-group.col-xs-4
					label Roles
					simple-array-entry(array-model = "user.current.roles", addition-tooltip = "Add another role", removal-tooltip = "Remove this role")
			.row
				.col-xs-6
					.button-row-left
						button.btn.btn-default(type = "submit", ng-disabled = "userForm.$invalid || user.busy")
							span.button-icon.glyphicon.glyphicon-save
							| Save
						a.btn.btn-link(ui-sref = "^") Cancel
				.col-xs-6
					.button-row-right
						a.btn.btn-default(ng-if = "user.current._id", ng-click = "user.sync()", ng-disabled = "user.busy")
							span.button-icon.glyphicon.glyphicon-refresh
							| Force DB/AD Sync
